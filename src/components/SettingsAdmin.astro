---
// Admin component for managing site settings
// This is for authorized administrators only
---

<div id="settings-admin" class="p-4 bg-gray-100 rounded-lg">
  <h2 class="text-xl font-semibold mb-4">Site Settings</h2>
  
  <div id="settings-content" class="space-y-4">
    <div>
      <label class="block mb-1 font-medium">Signup State</label>
      <select id="signup-state" class="w-full p-2 border rounded">
        <option value="open">Open</option>
        <option value="closed">Closed</option>
        <option value="comingsoon">Coming Soon</option>
      </select>
    </div>
    
    <div>
      <label class="block mb-1 font-medium">Lesson Info Active</label>
      <div class="flex items-center">
        <input type="checkbox" id="lesson-info-active" class="mr-2">
        <span>Show lesson information page</span>
      </div>
    </div>
    
    <div>
      <label class="block mb-1 font-medium">Stripe Publish Key</label>
      <input type="text" id="stripe-key" class="w-full p-2 border rounded">
    </div>
    
    <div>
      <button id="save-settings" class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">
        Save Settings
      </button>
    </div>
  </div>
  
  <div id="settings-error" class="mt-4 hidden bg-red-100 text-red-800 p-3 rounded">
    Settings could not be loaded from Firebase. Please create the settings collection first or check your Firebase configuration.
  </div>
  
  <div id="settings-feedback" class="mt-4 hidden"></div>
</div>

<script>
  // Only execute this script if the admin component is present on the page
  if (document.getElementById('settings-admin')) {
    // Import the settings functions
    const initSettingsModule = import('../lib/initSettings');
    
    // Elements
    const settingsContent = document.getElementById('settings-content');
    const settingsError = document.getElementById('settings-error');
    const signupStateSelect = document.getElementById('signup-state');
    const lessonInfoCheckbox = document.getElementById('lesson-info-active');
    const stripeKeyInput = document.getElementById('stripe-key');
    const saveButton = document.getElementById('save-settings');
    const feedbackEl = document.getElementById('settings-feedback');
    
    // Function to show feedback
    const showFeedback = (message, isError = false) => {
      feedbackEl.textContent = message;
      feedbackEl.classList.remove('hidden', 'bg-green-100', 'text-green-800', 'bg-red-100', 'text-red-800', 'p-3', 'rounded');
      feedbackEl.classList.add('p-3', 'rounded');
      
      if (isError) {
        feedbackEl.classList.add('bg-red-100', 'text-red-800');
      } else {
        feedbackEl.classList.add('bg-green-100', 'text-green-800');
      }
    };
    
    // Load current settings
    const loadSettings = async () => {
      try {
        const { getSettings } = await initSettingsModule;
        const settings = await getSettings();
        
        // Update form with current settings
        signupStateSelect.value = settings.signupState || 'closed';
        lessonInfoCheckbox.checked = !!settings.lessonInfoActive;
        stripeKeyInput.value = settings.stripePublishKey || '';
        
        // Show settings content
        settingsContent.classList.remove('hidden');
        settingsError.classList.add('hidden');
      } catch (error) {
        console.error('Error loading settings:', error);
        // Hide settings form and show error
        settingsContent.classList.add('hidden');
        settingsError.classList.remove('hidden');
        settingsError.textContent = error.message || 'Error loading settings. Please check your Firebase configuration.';
      }
    };
    
    // Save settings
    saveButton.addEventListener('click', async () => {
      try {
        const { updateSettings } = await initSettingsModule;
        
        const updatedSettings = {
          signupState: signupStateSelect.value,
          lessonInfoActive: lessonInfoCheckbox.checked,
          stripePublishKey: stripeKeyInput.value
        };
        
        // Update settings in Firestore
        await updateSettings(updatedSettings);
        showFeedback('Settings saved successfully!');
      } catch (error) {
        console.error('Error saving settings:', error);
        showFeedback(error.message || 'Error saving settings. Please check your Firebase configuration.', true);
      }
    });
    
    // Load settings when the page loads
    document.addEventListener('DOMContentLoaded', loadSettings);
    
    // Also reload settings when they're updated elsewhere
    document.addEventListener('settings-loaded', (event) => {
      const settings = event.detail;
      signupStateSelect.value = settings.signupState || 'closed';
      lessonInfoCheckbox.checked = !!settings.lessonInfoActive;
      stripeKeyInput.value = settings.stripePublishKey || '';
    });
  }
</script> 